@startuml
'https://plantuml.com/class-diagram
interface ParkingServletable {
    {static} getBody(HttpServletRequest): String
    doGet(HttpServletRequest, HttpServletResponse) :
    doPost(HttpServletRequest, HttpServletResponse) :
    getContext() : ServletContext :
    destroy() :
}
abstract class ParkingServlet {
    + doGet(HttpServletRequest, HttpServletResponse) :
    + doPost(HttpServletRequest, HttpServletResponse) :
    # handleBody(HttpServletRequest, HttpServletResponse) :
    # {abstract} handleRequest(HttpServletRequest, HttpServletResponse) :
    # {abstract} handleEvent(String, String[]) :
    + {final} getContext() : ServletContext
    + {final} destroy() :
}

abstract class ParkhausServlet {
    ~ {static} List<String> parkingspaces
    ~ {static} int max
    - Parkhausmodel pModel

    ~ {abstract} getName() : String
    # {final} configMax(int) :
    + {final} doGet(HttpServletRequest, HttpServletResponse) :
    # {final} handleRequest(HttpServletRequest, HttpServletResponse) :
    # {final} handleRequest(HttpServletRequest, HttpServletResponse) :
    # {final} handleEvent(String, String[]) :
    - handleEnter(String[]) :
    - handleLeave(String[]) :
    - handleOccupied(String[]) :
    ~ cars() : List<CarIF>
    ~ formerCars() : List<CarIF>
    - handleConfig(HttpServletResponse) :
    - savedCars()(HttpServletResponse) :
}

class ParkhausModel {
    # {final} configMax(int) : int
    + getDoubleAttribute(Double) : Double
    + filterCustomerAmountWithoutSpecific(List<CarIF>,String) : long
    + filterColorErase(List<CarIF>,String) : List<CarIF>
    + filterNrErase(List<CarIF>,int) : List<CarIF>
}

class Level1Servlet {
    ~ getName() : String
}

class Car {
    - String[] params
    + nr() : int
    + licensePlate() : String
    + begin() : long
    + end() : long
    + duration() : int
    + price() : int
    + hash() : String
    + space() : int
    + kunde() : String
    + typeCar() : String
    + toString() : String
}

interface CarIF{
    nr() : int
    licensePlate() : String
    begin() : long
    end() : long
    duration() : int
    price() : int
    hash() : String
    space() : int
    kunde() : String
    typeCar() : String
    toString() : String
}

abstract class ManagementAuthenticationServlet {
    - {final} {static} serialVersionUID
    + doPost(HttpServletRequest,HttpServletResponse) :
    - handleInvalid(PrintWriter) :
    - handleSuccess(HttpServletRequest,HttpServletResponse) :
}

class ManagementServlet {
    - {final} {static} serialVersionUID
    + doGet(HttpServletRequest,HttpServletResponse) :
    + handleRequest(HttpServletRequest,HttpServletResponse) :
    # handleBody(HttpServletRequest,HttpServletResponse) :
    # handleEvent(HttpServletRequest,HttpServletResponse) :
}

class Accounting {
    - {static} Accounting instance
    - {static} {final} List<HashMap<String,String>> BILLS
    - Accounting()
    + {static} synchronized getInstance() : Accounting
    + checkBILLS(String,String) : boolean
    ~ getBILLS() : List<HashMap<String,String>>
}




ParkingServletable <|-- ParkingServlet
ParkingServlet <|-- ParkhausServlet
ParkhausServlet <|-- Level1Servlet

ParkhausServlet "0..*" o-left- "1" ParkhausModel : "              "
CarIF "0..*" -left-o "1" ParkhausServlet : "             "
CarIF <|-- Car

ParkingServlet <|-left- ManagementAuthenticationServlet
ManagementAuthenticationServlet <|-down- ManagementServlet
ManagementAuthenticationServlet "1" o-left- "1" Accounting : "         "

@enduml