@startuml
rectangle CheckoutController {
    class View{}

    interface  ParkingServletable <<interface>>{
        {static} getBody(HttpServletRequest) throws IOException
        doGet(HttpServletRequest, HttpServletResponse) throws IOException, ServletException
        doPost(HttpServletRequest, HttpServletResponse) throws IOException, ServletException
        handleRequest(HttpServletRequest, HttpServletResponse) throws IOException, ServletException
        getContext():ServletContext
        destroy()
    }

    abstract class ParkingServlet <<abstract class>> {
        +doGet(HttpServletRequest, HttpServletResponse) throws IOException, ServletException
        +doPost(HttpServletRequest, HttpServletResponse) throws IOException, ServletException
        +{abstract} handleRequest(HttpServletRequest, HttpServletResponse) throws IOException, ServletException
        +getContext():ServletContext
        +destroy()
    }

    class CheckoutControllerServlet <<class>> {
        +handleRequest(HttpServletRequest, HttpServletResponse) throws IOException, ServletException
    }

    View o-right- ParkingServletable: <<aggregates>>
    ParkingServlet .up.|> ParkingServletable: <<implements>>
    CheckoutControllerServlet -up-|> ParkingServlet: <<extends>>

}
@enduml